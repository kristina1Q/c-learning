# get<>(): 通常用于std::tuple和std::array。它的用法是通过模板参数来指定要访问的元素的索引。
# at(): 是std::vector, std::map, std::array等容器的成员函数。它用于访问指定索引或键对应的元素。


# get<>(): 对于std::get<>()，如果指定的索引超出范围，编译器会报错。这意味着在编译时，如果索引
# 不合法，代码无法编译成功。
# at(): 访问at()时，如果索引超出范围，它会抛出一个std::out_of_range异常。这是在运行时进行的检查。


# get<>(): 由于是编译时索引，通常更高效，不涉及运行时检查。
# at(): 因为它需要进行运行时边界检查，所以在性能上可能稍慢。不过，这种额外的检查在安全性
# 和可调试性上是有价值的。


# 对于std::tuple或std::array，get<>()更简洁，但需要了解确切的索引类型。
# 对于标准容器如std::vector和std::map，at()提供了更安全的访问方式，特别是在不确定索引是否有效时。