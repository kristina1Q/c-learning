//区别：
//1:define无类型，不是类型安全的，不会进行类型检查，仅仅展开
//const有类型，是类型安全的，会进行类型检查


// 2.define仅仅是字符替换，（宏定义只做替换）程序中每次出现都要进行字符替换，所以程序中会有很
// 多define宏的副本，就会产生很多内存损耗。但是其本身并未分配内存，用到才分配。且其不做替换，比
// 如 define A  2+3，每次用到A就一直是替换2+3，而非是5。
// const定义的值是常量不能改变，但会分配内存空间，但也就分配这一次，之后的程序并不用再分配。而且
// 编译器通常不为普通const常量分配存储空间，而是将它们保存在符号表中，这使得它成为一个编译期间的
// 常量，没有了存储与读内存的操作，使得它的效率也很高。


//c的编译器可以用scanf输入const的值，但c++的不行，有其他方法，来定义数组大小

#include <iostream>
using namespace std;
int main()
{
    float a=11.17;
    float b=50.25;
    cout<<a+b<<endl;
    return 0;
}